# Starter workflow to use github-actions ci. This checks out repository, builds and runs unit tests.
# Reference: https://docs.github.com/en/actions/guides/building-and-testing-java-with-gradle

name: Github Actions CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cleanup Gradle Cache
          # Remove some files from the Gradle cache which might have cached by earlier builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
  unit-test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Running unit tests excluding ambry-store
        run: ./gradlew build -x :ambry-store:test
  store-test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Running unit tests excluding ambry-store
        run: ./gradlew build :ambry-store:test
